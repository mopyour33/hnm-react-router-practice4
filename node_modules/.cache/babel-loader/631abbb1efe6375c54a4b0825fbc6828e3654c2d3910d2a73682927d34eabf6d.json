{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\noonaproject\\\\hnm-react-router-practice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport ProductAll from './page/ProductAll';\nimport LoginPage from './page/LoginPage';\nimport ProductDetail from './page/ProductDetail';\nimport Navbar from './component/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\n\n//1. 전체상품페이지, 로그인, 상품상세페이지\n//1-1. Navigation bar 만들기\n\n//2. 전체상품페이지에서는 전체 상품을 볼 수 있다.\n//3. 로그인 버튼을 누르면 로그인 페이지가 나온다.\n//4. 상품디테일을 눌렀으나, 로그인이 안되어있을 경우 로그인페이지가 먼저 나온다.\n//5. 로그인이 되어 있을 경우에는 상품 디테일 페이지를 볼 수 있다.\n//6. 로그아웃버튼을 누르면 로그아웃이 되면서 로그인 페이지로 이동한다.\n//7. 로그인을 하면 로그아웃이 보이고, 로그아웃을 하면 로그인이 보인다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [authenticate, setAuthenticate] = useState(false); //true면 로그인이 되고 false면 로그인이 안됨.\n\n  useEffect(() => {\n    console.log(\"AAAA\", authenticate);\n  }, [authenticate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProductAll, {\n          authenticate: authenticate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          setAuthenticate: setAuthenticate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/product/:id\",\n        element: /*#__PURE__*/_jsxDEV(ProductDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IeobECor1upLkojOIH3uBcF4CSo=\");\n_c = App;\nexport default App;\n\n// //1~3까지 내가 작성한 것(시작)\n// import { Routes, Route } from 'react-router-dom';\n// import './App.css';\n// import ProductAll from './page/ProductAll';\n// import LoginPage from './page/LoginPage';\n// import ProductDetail from './page/ProductDetail';\n// import Navbar from './component/Navbar';\n// import 'bootstrap/dist/css/bootstrap.min.css'\n\n// //1. 전체상품페이지, 로그인, 상품상세페이지\n// //1-1. Navigation bar 만들기\n\n// //2. 전체상품페이지에서는 전체 상품을 볼 수 있다.\n// //3. 로그인 버튼을 누르면 로그인 페이지가 나온다.\n// //4. 상품디테일을 눌렀으나, 로그인이 안되어있을 경우 로그인페이지가 먼저 나온다.\n// //5. 로그인이 되어 있을 경우에는 상품 디테일 페이지를 볼 수 있다.\n// //6. 로그아웃버튼을 누르면 로그아웃이 되면서 로그인 페이지로 이동한다.\n// //7. 로그인을 하면 로그아웃이 보이고, 로그아웃을 하면 로그인이 보인다.\n\n// function App() {\n\n//   return (\n//     <div>\n//       <Navbar/>\n//       <Routes>\n//         <Route path=\"/\" element={<ProductAll/>}/>\n//         <Route path=\"/login\" element={<LoginPage/>}/>\n//         <Route path=\"/product/:id\" element={<ProductDetail/>}/>\n//       </Routes>\n//     </div>\n//   );\n// }\n\n// export default App;\n// //1~3까지 내가 작성한 것(끝)\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","ProductAll","LoginPage","ProductDetail","Navbar","useEffect","useState","jsxDEV","_jsxDEV","App","_s","authenticate","setAuthenticate","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/noonaproject/hnm-react-router-practice/src/App.js"],"sourcesContent":["import { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport ProductAll from './page/ProductAll';\nimport LoginPage from './page/LoginPage';\nimport ProductDetail from './page/ProductDetail';\nimport Navbar from './component/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { useEffect, useState } from 'react';\n\n//1. 전체상품페이지, 로그인, 상품상세페이지\n//1-1. Navigation bar 만들기\n\n//2. 전체상품페이지에서는 전체 상품을 볼 수 있다.\n//3. 로그인 버튼을 누르면 로그인 페이지가 나온다.\n//4. 상품디테일을 눌렀으나, 로그인이 안되어있을 경우 로그인페이지가 먼저 나온다.\n//5. 로그인이 되어 있을 경우에는 상품 디테일 페이지를 볼 수 있다.\n//6. 로그아웃버튼을 누르면 로그아웃이 되면서 로그인 페이지로 이동한다.\n//7. 로그인을 하면 로그아웃이 보이고, 로그아웃을 하면 로그인이 보인다.\n\nfunction App() {\n\n  const [authenticate,setAuthenticate] =useState(false) //true면 로그인이 되고 false면 로그인이 안됨.\n\n  useEffect(()=>{\n    console.log(\"AAAA\", authenticate)\n  },[authenticate])\n\n  return (\n    <div>\n      <Navbar/>\n      <Routes>\n        <Route path=\"/\" element={<ProductAll authenticate={authenticate}/>}/>\n        <Route path=\"/login\" element={<LoginPage setAuthenticate={setAuthenticate}/>}/>\n        <Route path=\"/product/:id\" element={<ProductDetail/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// //1~3까지 내가 작성한 것(시작)\n// import { Routes, Route } from 'react-router-dom';\n// import './App.css';\n// import ProductAll from './page/ProductAll';\n// import LoginPage from './page/LoginPage';\n// import ProductDetail from './page/ProductDetail';\n// import Navbar from './component/Navbar';\n// import 'bootstrap/dist/css/bootstrap.min.css'\n\n// //1. 전체상품페이지, 로그인, 상품상세페이지\n// //1-1. Navigation bar 만들기\n\n// //2. 전체상품페이지에서는 전체 상품을 볼 수 있다.\n// //3. 로그인 버튼을 누르면 로그인 페이지가 나온다.\n// //4. 상품디테일을 눌렀으나, 로그인이 안되어있을 경우 로그인페이지가 먼저 나온다.\n// //5. 로그인이 되어 있을 경우에는 상품 디테일 페이지를 볼 수 있다.\n// //6. 로그아웃버튼을 누르면 로그아웃이 되면서 로그인 페이지로 이동한다.\n// //7. 로그인을 하면 로그아웃이 보이고, 로그아웃을 하면 로그인이 보인다.\n\n// function App() {\n\n//   return (\n//     <div>\n//       <Navbar/>\n//       <Routes>\n//         <Route path=\"/\" element={<ProductAll/>}/>\n//         <Route path=\"/login\" element={<LoginPage/>}/>\n//         <Route path=\"/product/:id\" element={<ProductDetail/>}/>\n//       </Routes>\n//     </div>\n//   );\n// }\n\n// export default App;\n// //1~3까지 내가 작성한 것(끝)"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAO,sCAAsC;AAC7C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAEN,QAAQ,CAAC,KAAK,CAAC,EAAC;;EAEtDD,SAAS,CAAC,MAAI;IACZQ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,YAAY,CAAC;EACnC,CAAC,EAAC,CAACA,YAAY,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACJ,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTX,OAAA,CAACT,MAAM;MAAAgB,QAAA,gBACLP,OAAA,CAACR,KAAK;QAACoB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEb,OAAA,CAACP,UAAU;UAACU,YAAY,EAAEA;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrEX,OAAA,CAACR,KAAK;QAACoB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEb,OAAA,CAACN,SAAS;UAACU,eAAe,EAAEA;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/EX,OAAA,CAACR,KAAK;QAACoB,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEb,OAAA,CAACL,aAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACT,EAAA,CAlBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAoBZ,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}